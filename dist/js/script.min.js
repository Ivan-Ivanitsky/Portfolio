import {
  gsap,
  TextPlugin,
  ScrollTrigger,
  random,
} from "../plugins/gsap-public/esm/all.js";
gsap.registerPlugin(ScrollTrigger, TextPlugin);
const hamburger = document.querySelector(".hamburger"),
  menu = document.querySelector(".menu"),
  closeElement = document.querySelector(".menu__close"),
  overlayClose = document.querySelector(".menu__overlay"),
  lineType = document.querySelector(".info-page__description"),
  show = document.querySelectorAll(".show"),
  showLinkCode = document.querySelectorAll(".show-link-code"),
  spanType = document.querySelector(".wrap"),
  text = document.querySelector(".list__aboutme__text"),
  listAboutme = document.querySelectorAll(".list__aboutme-experience "),
  expirians = document.querySelectorAll(".resume__column"),
  myProj = document.querySelectorAll(".portfolio__items "),
  portfolio = document.querySelectorAll(".portfolio__items");
hamburger.addEventListener("click", () => {
  menu.classList.add("active"), hamburger.classList.add("active");
}),
  closeElement.addEventListener("click", () => {
    menu.classList.remove("active"), hamburger.classList.remove("active");
  }),
  overlayClose.addEventListener("click", () => {
    menu.classList.remove("active"), hamburger.classList.remove("active");
  });
const percent = document.querySelectorAll(".progress__percent"),
  lines = document.querySelectorAll(".progress__line span");
function activeSmooth() {
  const e = document.querySelectorAll(".promo__btns a");
  e.forEach((t) => {
    t.addEventListener("click", (r) => {
      r.preventDefault(),
        hiddenButton(e),
        t.classList.add("btn"),
        t.classList.contains("promo__link-invisible")
          ? document
              .querySelector(".me-content")
              .scrollIntoView({ behavior: "smooth", block: "center" })
          : document
              .querySelector(".portfolio__wrapper")
              .scrollIntoView({ behavior: "smooth", block: "center" });
    });
  });
}
function hiddenButton(e) {
  e.forEach((e) => {
    e.classList.remove("btn");
  });
}
function menuHamburger() {
  const e = document.querySelectorAll(".menu__link a"),
    t = document.querySelectorAll("h2");
  e.forEach((e, r) => {
    e.addEventListener("click", (e) => {
      e.preventDefault(),
        menu.classList.remove("active"),
        hamburger.classList.remove("active"),
        t[r].scrollIntoView({ behavior: "smooth", block: "start" });
    });
  });
}
function lineText() {
  let e = 0,
    t = 0,
    r = "";
  const o = lineType.dataset.type.split(","),
    n = (e) => Math.floor(1.5 * e);
  !(function l() {
    const c = setTimeout(() => {
      if (
        ((r += o[e][t]), (spanType.innerHTML = r + "|"), t++, o[e].length <= t)
      ) {
        clearTimeout(c);
        setTimeout(() => {
          r = r.split("");
          const c = setInterval(() => {
            (r = r.slice(0, r.length - 1)),
              (spanType.innerHTML = r.join("") + "|"),
              t--,
              t <= 0 && (clearInterval(c), l(), e++),
              e == o.length && ((e = 0), (t = 0));
          }, n(60));
        }, n(800));
        return !0;
      }
      l();
    }, n(110));
  })();
}
function createElementDescr() {
  const e = document.createElement("div"),
    t = document.createElement("span");
  return e.classList.add("description"), e.appendChild(t), e;
}
function randomNumber(e, t) {
  return Math.floor(Math.random() * (e - t) + t);
}
function removeClassActiveCard(e) {
  e > -1 &&
    portfolio.forEach((t, r) => {
      r === e && t.classList.remove("active-card");
    });
}
function descrLine() {
  const e = document.querySelectorAll(".links");
  let t = !1,
    r = 0,
    o = "",
    n = -1;
  portfolio.forEach((l, c) => {
    l.addEventListener("mouseover", (i) => {
      if (l === portfolio[c] && i.target.parentElement !== e[n]) {
        removeClassActiveCard(n), l.classList.add("active-card");
        const e = createElementDescr(),
          i = l.attributes[0].nodeValue;
        show[c].insertAdjacentElement("afterend", e),
          (n = c),
          (t = setInterval(() => {
            (o += i[r]),
              (e.lastChild.textContent = o + "|"),
              r++,
              r == i.length &&
                ((e.lastChild.textContent = o + ""), clearInterval(t));
          }, randomNumber(160, 130)));
      }
    }),
      l.addEventListener("mouseout", (e) => {
        const n = document.querySelector(".description");
        n && n.remove(), (o = ""), (r = 0), clearInterval(t);
      });
  });
}
function splitText(e) {
  let t = [];
  return (
    e.innerHTML.split(/\s/g).filter((r) => {
      "" !== r && ((e.innerHTML = ""), t.push(r));
    }),
    t
  );
}
function createAnimateElements(e) {
  return (
    e.forEach((e) => {
      text.innerHTML += ` <div class ='word' style='display: inline-block;'>${e}</div>`;
    }),
    document.querySelectorAll(".word")
  );
}
function startAnimate(e) {
  createAnimateElements(e).forEach((e) => {
    gsap.from(e, 2.5, {
      opacity: 0,
      scale: 1,
      duration: 1,
      x: random(-500, 500),
      y: random(-500, 500),
      z: random(-500, 500),
      scrollTrigger: { trigger: ".list__aboutme__text", start: "center 80%" },
    });
  });
}
function blockAnimations(e, t) {
  e.forEach((e) => {
    gsap.from(e, 1, {
      opacity: 0,
      scale: 1,
      duration: 1,
      x: random(-500, 500),
      y: random(-500, 500),
      z: random(-500, 500),
      scrollTrigger: { trigger: t, start: "top 35%" },
    });
  });
}
percent.forEach((e, t) => {
  let r = [];
  (r += parseInt(e.innerHTML)),
    r >= 0 && r <= 100
      ? (lines[t].style.width = e.innerHTML)
      : alert('Введите проценты от 0 до 100 в блоке ".progress__persent"');
}),
  startAnimate(splitText(text)),
  blockAnimations(listAboutme, ".about-me"),
  blockAnimations(expirians, ".resume"),
  blockAnimations(myProj, ".portfolio"),
  descrLine(),
  lineText(),
  activeSmooth(),
  menuHamburger();
